{"version":3,"file":"mdb-angular-ui-kit-checkbox.js","sources":["../../../projects/mdb-angular-ui-kit/checkbox/checkbox.directive.ts","../../../projects/mdb-angular-ui-kit/checkbox/checkbox.module.ts","../../../projects/mdb-angular-ui-kit/checkbox/mdb-angular-ui-kit-checkbox.ts"],"names":[],"mappings":";;;;;;MAYa,2BAA2B,GAAQ;AAChD,IAAE,OAAO,EAAE,iBAAiB;AAC5B;AACE,IAAA,WAAW,EAAE,UAAU,CAAC,MAAM,oBAAoB,CAAC;AACrD,IAAE,KAAK,EAAE,IAAI;AACb,EAAE;AACF,MACa,iBAAiB;AAC9B,CAEC;AACD,MAMa,oBAAoB;AACjC,IAiDE;AAAgB,QA1CR,aAAQ,GAAG,KAAK,CAAC;AAC3B,QAQU,WAAM,GAAQ,IAAI,CAAC;AAC7B,QAQU,cAAS,GAAG,KAAK,CAAC;AAC5B,QACY,mBAAc,GAAoC,IAAI,YAAY,EAAqB,CAAC;AACpG;AAEc,QA0CZ,aAAQ,GAAG,CAAC,CAAM,QAAO,CAAC;AAC5B,QAAE,cAAS,GAAG,SAAQ,CAAC;AACvB,KAzBkB;AAClB,IAlDE,IACI,OAAO;AAAK,QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,KAAG;AACH,IAAE,IAAI,OAAO,CAAC,KAAc;AAC5B,QAAI,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACjD,KAAG;AACH,IAEE,IACI,KAAK;AAAK,QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH,IAAE,IAAI,KAAK,CAAC,KAAU;AACtB,QAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,KAAG;AACH,IAEE,IACI,QAAQ;AAAK,QACf,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH,IAAE,IAAI,QAAQ,CAAC,KAAc;AAC7B,QAAI,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAClD,KAAG;AACH,IAIE,IACI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH,IACE,IACI,SAAS;AAAK,QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,KAAG;AACH,IAEE,eAAe;AAAK,QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,KAAG;AACH,IAEE,MAAM;AAAK,QACT,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AACH,IAGE,IAAI,WAAW;AAAK,QAClB,MAAM,cAAc,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACnD,QAAI,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;AAClC,QAAI,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1C,QAAI,OAAO,cAAc,CAAC;AAC1B,KAAG;AACH,IACE,MAAM;AAAK,QACT,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;AACnC,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChC,QAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC5B,KAAG;AACH,IACE,gBAAgB;AAAK,QACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC/C,KAAG;AACH,IAKE,UAAU,CAAC,KAAU;AAAI,QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,QAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;AAC3B,KAAG;AACH,IACE,gBAAgB,CAAC,EAAoB;AAAI,QACvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AACH,IACE,iBAAiB,CAAC,EAAc;AAAI,QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AACH,IACE,gBAAgB,CAAC,UAAmB;AAAI,QACtC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC/B,KAAG;AACH;gDAjGC,SAAS,SAAC;+CAET,QAAQ,EAAE,eAAe,kBACzB,SAAS,EAAE,CAAC,2BAA2B,CAAC,eACzC;;;;sMACI;AAAC;AACY;AAEP,sBAFR,KAAK,SAAC,SAAS;AACb,oBAQF,KAAK,SAAC,OAAO;AACX,uBAQF,KAAK,SAAC,UAAU;AACd,6BAQF,MAAM;AAAK,yBAEX,WAAW,SAAC,UAAU;AACpB,wBAIF,WAAW,SAAC,SAAS;AACnB,8BAIF,YAAY,SAAC,OAAO;AAClB,qBAIF,YAAY,SAAC,MAAM;AAClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MChEK,iBAAiB;AAAG;6CALhC,QAAQ,SAAC,kBACR,YAAY,EAAE,CAAC;QAAoB,CAAC,kBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC,kBAC/B,OAAO,EAAE,CAAC;KAAY,EAAE,WAAW,CAAC,eACrC;;;;;;;;;8SACI;AAAC;ACXN;AACA;AACA;AACA;AACA;AAC2E","sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  Directive,\n  HostBinding,\n  HostListener,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const MDB_CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbCheckboxDirective),\n  multi: true,\n};\n\nexport class MdbCheckboxChange {\n  element: MdbCheckboxDirective;\n  checked: boolean;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbCheckbox]',\n  providers: [MDB_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class MdbCheckboxDirective {\n  @Input('checked')\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  @Input('value')\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  private _value: any = null;\n\n  @Input('disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Output() checkboxChange: EventEmitter<MdbCheckboxChange> = new EventEmitter<MdbCheckboxChange>();\n\n  @HostBinding('disabled')\n  get isDisabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('checked')\n  get isChecked(): boolean {\n    return this._checked;\n  }\n\n  @HostListener('click')\n  onCheckboxClick(): void {\n    this.toggle();\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  constructor() {}\n\n  get changeEvent(): MdbCheckboxChange {\n    const newChangeEvent = new MdbCheckboxChange();\n    newChangeEvent.element = this;\n    newChangeEvent.checked = this.checked;\n    return newChangeEvent;\n  }\n\n  toggle(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._checked = !this._checked;\n    this.onChange(this.checked);\n    this.onCheckboxChange();\n  }\n\n  onCheckboxChange(): void {\n    this.checkboxChange.emit(this.changeEvent);\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MdbCheckboxDirective } from './checkbox.directive';\n\n@NgModule({\n  declarations: [MdbCheckboxDirective],\n  exports: [MdbCheckboxDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class MdbCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}